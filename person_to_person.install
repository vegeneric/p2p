<?php

// person_to_person.install Person to Person v1.0 10/04/2010 vegeneric

function person_to_person_schema() {
  $schema['person_to_person_potential_hosts'] = array(
    'fields' => array(
      'phid' => array(
        'description' => 'The potential host identifier.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'guest_uid' => array(
        'description' => 'Uid of the guest.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'guest_nid' => array(
        'description' => 'Nid of the guest node.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'host_uid' => array(
        'description' => 'Uid of the host node.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'host_nid' => array(
        'description' => 'Nid of the host node.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Status of the host flagging.',
        'type' => 'varchar',
        'length' => 50,
      ),
      'timestamp' => array(
        'description' => 'Time potential match was made.',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('phid'),
  );
  return $schema;
}

function person_to_person_install() {
  drupal_install_schema('person_to_person');

  // Create roles here... was using Features but then we can't configure auto assign role
  $roles = array('guest', 'host', 'p2p admin');
  foreach ($roles AS $role) {
    db_query("INSERT INTO {role} (name) VALUES ('%s')", $role);
  }
  
  // Configre auto assign role for hosts & guests
  if ($guest_rid = db_result(db_query("SELECT rid FROM {role} WHERE name = 'guest'"))) {
    db_query("INSERT INTO {autoassignrole_page} (rid, display, path, menu, format) VALUES (%d, 2, 'user/register/guest', 'features', 1)", $guest_rid);
  	if (module_exists('better_formats')) {
  		better_formats_create_role($guest_rid);
  	}
  }
  if ($host_rid = db_result(db_query("SELECT rid FROM {role} WHERE name = 'host'"))) {
    db_query("INSERT INTO {autoassignrole_page} (rid, display, path, menu, format) VALUES (%d, 2, 'user/register/host', 'features', 1)", $host_rid);
    if (module_exists('better_formats')) {
  		better_formats_create_role($host_rid);
  	}
  }
  
  // Configure content profiles for hosts & guests
  variable_set('content_profile_use_guest', 1);
  variable_set('content_profile_guest', array('weight' => 0, 'user_display' => 'full', 'edit_link' => 0, 'edit_tab' => 'sub', 'add_link' => 0, 'autoassignrole_user' => array(0 => $guest_rid), 'registration_user' => 0, 'admin_user_create_user' => 0, 'registation_hide' => array()));
  variable_set('content_profile_use_host', 1);
  variable_set('content_profile_host', array('weight' => 0, 'user_display' => 'full', 'edit_link' => 0, 'edit_tab' => 'sub', 'add_link' => 0, 'autoassignrole_user' => array(0 => $host_rid), 'registration_user' => 0, 'admin_user_create_user' => 0, 'registation_hide' => array()));
  
  // Set core workflow options for hosts, guests, offers, and experiences
  // All should not be promoted to front page, and experience should not be published
  variable_set('node_options_guest', array(0 => 'status'));
  variable_set('node_options_host', array(0 => 'status'));
  variable_set('node_options_offer', array(0 => 'status', 1 => 'revision'));
  variable_set('node_options_experience', array());
  
  // Configure auto_nodetitle for offer node type
  variable_set('ant_offer', 1);
  variable_set('ant_pattern_offer', 'Offer for [field_guest-title]');
  variable_set('ant_php_offer', 0); 
  
  // Check if a vocab named 'Interests' exists, if so, set our variable & connect to hosts and guests
  if (!$int_vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE name = 'Interests'"))) {
    db_query("INSERT INTO {vocabulary} (name, relations, hierarchy, multiple, required, module) VALUES ('Interests', 1, 1, 1, 1, 'person_to_person')");
    $int_vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE name = 'Interests'"));
    drupal_set_message('Automatically created Interests vocabulary. You should '. l('add some terms', 'admin/content/taxonomy/'. $int_vid .'/add/term', array('attributes' => array('target' => '_blank'))) .' now.');
  }
  variable_set('person_to_person_interests_vocab', $int_vid);
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'host')", $int_vid);
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'guest')", $int_vid);
  
  // Do the same thing for an 'Islands' vocab
  if (!$isl_vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE name = 'Island'"))) {
    db_query("INSERT INTO {vocabulary} (name, relations, hierarchy, required, module) VALUES ('Island', 1, 1, 1, 'person_to_person')");
    $isl_vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE name = 'Island'"));
    drupal_set_message('Automatically created Island vocabulary. You should '. l('add some terms', 'admin/content/taxonomy/'. $isl_vid .'/add/term', array('attributes' => array('target' => '_blank'))) .' now.');
  }
  variable_set('person_to_person_island_vocab', $isl_vid);
  
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'host')", $isl_vid);
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'guest')", $isl_vid);
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'offer')", $isl_vid);
  db_query("INSERT INTO {vocabulary_node_types} (vid, type) VALUES (%d, 'experience')", $isl_vid);
  
  // Make sure to create 'All / Not sure' term for Island vocab
  $term = array(
    'vid' => $isl_vid,
    'name' => 'All / Not sure',
    'weight' => -10,
  );
  taxonomy_save_term($term);
}

function person_to_person_uninstall() {
  drupal_uninstall_schema('person_to_person');
}
